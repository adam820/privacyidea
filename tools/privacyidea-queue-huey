#!/usr/bin/env python
# -*- coding: utf-8 -*-
#  2018-11-14 Friedrich Weber <friedrich.weber@netknights.it>
#             Add a job queue
#
# This code is free software; you can redistribute it and/or
# modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
# License as published by the Free Software Foundation; either
# version 3 of the License, or any later version.
#
# This code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU AFFERO GENERAL PUBLIC LICENSE for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Heavily based on huey_consumer.py, which is licensed as follows.
#
# Copyright (c) 2017 Charles Leifer
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
import sys

from flask import _app_ctx_stack
from huey.consumer_options import ConsumerConfig
from huey.consumer_options import OptionParserHandler

from privacyidea.app import create_app
from privacyidea.lib.queue import get_job_queue, HueyQueue


def err(s):
    sys.stderr.write('\033[91m%s\033[0m\n' % s)


def make_push_app_context(app):
    """
    Create a huey pre-execute hook that pushes a new app context before executing any job.
    """
    def func(task):
        ctx = app.app_context()
        ctx.push()
    return func


def pop_app_context(task, ret, exc):
    """
    huey post-execute hook that pops the top elemen of the app context stack.
    """
    ctx = _app_ctx_stack.top
    ctx.pop()


def consumer_main():
    app = create_app(config_name='production')

    with app.app_context():
        queue = get_job_queue()
        if not isinstance(queue, HueyQueue):
            raise NotImplementedError("{!r} is not a HueyQueue".format(queue))

    parser_handler = OptionParserHandler()
    parser = parser_handler.get_option_parser()
    options, args = parser.parse_args()

    options = {k: v for k, v in options.__dict__.items()
               if v is not None}
    config = ConsumerConfig(**options)
    config.validate()
    config.setup_logger()

    queue.huey.register_pre_execute('push_app_context', make_push_app_context(app))
    queue.huey.register_post_execute('pop_app_context', pop_app_context)

    consumer = queue.huey.create_consumer(**config.values)
    consumer.run()


if __name__ == '__main__':
    consumer_main()
